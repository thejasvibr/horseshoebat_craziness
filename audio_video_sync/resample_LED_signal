#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""Re-sample each second to have the same sampling rate
Created on Tue Jul  2 14:05:59 2019

@author: tbeleyur
"""
import pandas as pd
import numpy as np 
import scipy.signal as signal 
import matplotlib.pyplot as plt
plt.rcParams['agg.path.chunksize'] = 10000



def resample_signal(input_signal, orig_fs, target_fs=25):
    '''Resamples the LED signal into the target frequency of sampling. 

    Parameters
    ----------
    input_signal : 1x Nsamples array -like

    orig_fs : int >0
              original frequency of sampling

    target_fs : int>0
                final sampling rate in Hz to which the input signal 
                must be resampled to. 
                Defaults to 25 Hz.

    Returns
    --------
    input_resampled : 1x Msamples np.array
                     resampled input signal 
  
    '''
    if orig_fs == target_fs:
        return(np.array(input_signal))
    else:
        durn = (1.0/orig_fs)*input_signal.size
        new_numsamples = int(durn*target_fs)
        input_resampled = signal.resample(np.array(input_signal), new_numsamples)
        return(input_resampled)















if __name__ == '__main__':
    fname = 'manyJPGs_frametimes.csv'
    df = pd.read_csv(fname)
    timestamps = np.unique(df['timestamp_checked'])
    index = np.random.choice(timestamps[1:-1],1)[0]
    subdf = df[df['timestamp_checked']==index]
    resampled = resample_signal(subdf['led_intensity'],
                                subdf['led_intensity'].size)
    plt.figure()
    plt.plot(np.linspace(0,1, subdf['led_intensity'].size),
             subdf['led_intensity'],'g')
    plt.plot(np.linspace(0,1,25),resampled,'r')
    
